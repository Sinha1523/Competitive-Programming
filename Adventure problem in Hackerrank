#include <bits/stdc++.h>
using namespace std;

int main() {
    int T; 
    cin >> T;

    while (T--) {
        int N, W; 
        cin >> N >> W;
        vector<int> weights(N);
        vector<int> values(N);
        vector<vector<int>> dp(N + 1, vector<int>(W + 1, 0));
        for (int i = 0; i < N; i++) {
            cin >> weights[i];
        }
        for (int i = 0; i < N; i++) {
            cin >> values[i];
        }
        for (int i = 1; i <= N; i++) {
            for (int j = 0; j <= W; j++) {
            if (weights[i - 1] <= j) {
                    int op1 = dp[i - 1][j - weights[i - 1]] + values[i - 1];
                    int op2 = dp[i - 1][j];
                    dp[i][j] = max(op1, op2);
                } else {
                    dp[i][j] = dp[i - 1][j];
                }
            }
        }
        cout << dp[N][W] << endl;
    }

    return 0;
}
